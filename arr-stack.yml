networks:
  default:
    driver: bridge

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      # For qbittorrent traffic
      - "6881:6881"
      - "6881:6881/udp"
      # Web UIs for services running through the VPN
      - "8080:8080" # qbittorrent
      - "9696:9696" # prowlarr
      - "7878:7878" # radarr
      - "8989:8989" # sonarr
      - "8686:8686" # lidarr
      - "6969:6969" # whisparr
      - "7474:7474" # autobrr
      - "5299:5299" # lazylibrarian
    volumes:
      - ./gluetun_config:/gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - VPN_PORT_FORWARDING=on
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    volumes:
      - ./qbittorrent_config:/config
      - ${MEDIA_PATH}:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2g
    depends_on:
      - gluetun
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    volumes:
      - ./prowlarr_config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1g
    depends_on:
      - gluetun
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    volumes:
      - ./radarr_config:/config
      - ${MEDIA_PATH}:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2g
    depends_on:
      - gluetun
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    volumes:
      - ./sonarr_config:/config
      - ${MEDIA_PATH}:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2g
    depends_on:
      - gluetun
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    network_mode: "service:gluetun"
    volumes:
      - ./lidarr_config:/config
      - ${MEDIA_PATH}:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    depends_on:
      - gluetun
    restart: unless-stopped

  whisparr:
    image: ghcr.io/hotio/whisparr:latest
    container_name: whisparr
    network_mode: "service:gluetun"
    volumes:
      - ./whisparr_config:/config
      - ${MEDIA_PATH}:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    depends_on:
      - gluetun
    restart: unless-stopped
    
  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./lazylibrarian_config:/config
      - ${MEDIA_PATH}:/data
    depends_on:
      - gluetun
    restart: unless-stopped

  autobrr:
    image: ghcr.io/autobrr/autobrr:latest
    container_name: autobrr
    network_mode: "service:gluetun"
    volumes:
      - ./autobrr_config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    depends_on:
      - gluetun
    restart: unless-stopped

  cross-seed:
    image: ghcr.io/cross-seed/cross-seed:latest
    container_name: cross-seed
    command: daemon
    network_mode: "service:gluetun"
    volumes:
      - ./cross-seed_config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    depends_on:
      - gluetun
    restart: unless-stopped

  jellystat-db:
    image: 'postgres:15.2'
    shm_size: 1gb
    container_name: jellystat-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bR/3ecaY0Srgf95bW149ew==
    volumes:
      - './jellystat_db_data:/var/lib/postgresql/data'

  jellystat:
    image: 'cyfershepard/jellystat:latest'
    container_name: jellystat
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bR/3ecaY0Srgf95bW149ew==
      POSTGRES_IP: jellystat-db
      POSTGRES_PORT: 5432
      JWT_SECRET: aKmIGvB7FREVj0d83kL4Lc0P3ZeU9ycVYJFX+H/rstY=
      TZ: mytimezone # <--- SET YOUR TIMEZONE (e.g., America/New_York)
    volumes:
      - './jellystat_config:/app/backend/backup-data'
    depends_on:
      - jellystat-db
    ports:
      - "3000:3000"
